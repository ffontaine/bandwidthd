####################################################
# Bandwidthd.conf
# 
# Commented out options are here to provide
# documentation and represent defaults

#subnet: What traffice to measure. Traffic that 
# matches none of these subnets will be ignored.
# Syntax is either IP Subnet Mask or CIDR
subnet 10.0.0.0 255.0.0.0
subnet 192.168.0.0/16
subnet 172.16.0.0/12

#dev: Which interface to listen to
# Bandwidthd listens on the first device it detects
# by default.  Run "bandwidthd -l" for a list of 
# devices. 
#dev "eth0"

#promiscuous: Capture data not destined for the
# interface.
#promiscuous true

#filter: the libpcap format filter to capture
# Please always include "ip" in the string to 
# avoid strange problems
#filter "ip"

#logdir: Set the cdf log output directory
# This version was compiled with @log_dir@
# This folder needs to exist beforehand.
#log_dir "/usr/local/var/bandwidthd"

#htdocs_dir:Set the static html output directory
# This was compiled with @htdocs_dir@
# This folder also needs to exist beforehand.
#htdocs_dir "/usr/local/var/bandwidthd/htdocs"

#output_cdf: Save cdf format logs to log_dir
#output_cdf true

#recover_cdf: Read the logs into memory on
# startup.
#recover_cdf true

#meta_refresh: How long the html pages would
# wait until requesting the browser to reload
# the page.
#meta_refresh 150

#graph: If enabled bandwidthd will draw usage graphs.
#graph true

#skip_intervals: How many sets of 2.5 minutes
# to skip between graphing runs.
#skip_intervals 0

#graph_cutoff: The minimum amount of data an
# IP must transfer before it should be graphed.
#graph_cutoff 1024

#PGSql support - Fill in a pgsql connection string in order to user
#PGSql as a backend
#do not uncomment this line if you're not using pgsql
#pgsql_connect_string "dbname = bandwidthd"

#SQLite support - path to a sqlite database
#do not uncomment this line if you're not using sqlite
#sqlite_filename "/var/bandwidthd.db"


